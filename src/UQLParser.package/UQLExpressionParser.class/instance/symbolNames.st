generated
symbolNames
	^ #('"!"' '"~"' '"--"' '"delete"' '"["' '"%"' '"**"' '"++"' '"("' '"years"' '"alter"' '"collection"' '"{"' '"*"' '"."' '";"' '"create"' '"/"' '"drop"' '"&&"' '"and"' '"||"' '"or"' '"=="' '")"' '","' '":"' '"!="' '">="' '"+"' '"<="' '">"' '"-"' '"="' '"<>"' '"<"' '"}"' '"schema"' '"not"' '"]"' '"is"' '"null"' '"wei"' '"like"' '"select"' '"between"' '"szabo"' '"days"' '"weeks"' '"minutes"' '"hours"' '"in"' '"finney"' '"ether"' '"seconds"' '"limit"' '"desc"' '"asc"' '"at"' '"domain"' '"from"' '"where"' '"union"' '"intersect"' '"minus"' '"as"' '"order"' '"inner"' '"by"' '"right"' '"outer"' '"join"' '"on"' '"left"' '<decimalnumber>' '<hexnumber>' '<realnumber>' '<booleanliteral>' '<identifier>' '<url>' '<whitespace>' '<stringLiteral>' '<comment>' 'DropStatement' 'CreateConnectionStatement' 'DropConnectionStatement' 'IdentifierLiteral' 'MemberAccess' '( IdentifierLiteral MemberAccess)' 'SelectStatement' 'DDLStatements' 'UrlLiteral' 'SetStatement' 'ExpressionList' 'FromStatement' 'DomainStatement' '( DomainStatement ''domain'')' '( DomainStatement ''domain'')?' 'WhereStatement' '( WhereStatement ''where'')' '( WhereStatement ''where'')?' 'OrderByStatement' '( OrderByStatement ''orderBy'')' '( OrderByStatement ''orderBy'')?' 'LimitStatement' '( LimitStatement ''limit'')' '( LimitStatement ''limit'')?' 'QueryStatements' 'IntersectionStatement' 'MinusStatement' '( SetStatement SelectStatement)' 'SourceBind' 'Join' '( Join ''sources'')' '( Join ''sources'')*' '( IdentifierLiteral UrlLiteral)' '( "at" ( IdentifierLiteral UrlLiteral) ''database'')' '( "at" ( IdentifierLiteral UrlLiteral) ''database'')?' 'BooleanOperation' 'CompareOperation' 'Call' '( BooleanOperation CompareOperation Call)' '"inner"?' '( BooleanOperation CompareOperation)' 'InnerJoin' '"outer"?' 'LeftJoin' 'RightJoin' 'Expression' '( "asc" "desc")' '( "asc" "desc") ''order'' ?' 'B e g i n' 'TermExpression' 'ParenthesisBooleanExpression' 'ModifyStatement' '( TermExpression BooleanOperation CompareOperation ParenthesisBooleanExpression ParenthesisCompareExpression)' 'BooleanOperable' 'NotOperation' 'OrOperation' 'AndOperation' '( "&&" "and")' '( "||" "or")' '( "!" "~")' 'ArithmeticOperation' 'Measure' 'ParenthesisArithmeticExpression' 'ArithmeticallyOperable' 'NegativeOperation' 'PowerOperation' 'MultiplyOperation' 'DivideOperation' 'ModuleOperation' 'SumOperation' 'SubstractOperation' '( TermExpression ArithmeticOperation ParenthesisArithmeticExpression Measure)' 'ComparisionOperable' 'LesserThanOperation' 'LesserEqualsThanOperation' 'GreaterThanOperation' 'GreaterEqualsThanOperation' '( LesserThanOperation LesserEqualsThanOperation GreaterThanOperation GreaterEqualsThanOperation)' 'EqualsToOperation' 'DifferentThanOperation' 'LikeOperation' 'InOperation' 'BetweenOperation' 'IsNullOperation' 'IsNotNullOperation' '( EqualsToOperation DifferentThanOperation LikeOperation InOperation BetweenOperation IsNullOperation IsNotNullOperation)' '( "==" "=")' '( "!=" "<>")' 'StringLiteral' 'TupleExpression' 'ParenthesisTupleExpression' 'ParenthesisTermExpression' 'ParenthesisExpression' 'Access' 'Literal' 'ArrayAccess' 'MethodCall' 'FunctionCall' 'BooleanLiteral' 'NumberLiteral' '( "." IdentifierLiteral ''member'')' '( "." IdentifierLiteral ''member'')+' '( "." IdentifierLiteral ''member'')*' 'FunctionCallArguments' 'RootQuery' 'ParenthesisCompareExpression' '( Clause ''clause'')*' '( Clause ''clause'')' '( <realnumber> <hexnumber> <decimalnumber>)' 'Clause' 'NumberUnit' '( Expression ''exp'')' '( Expression ''exp'')?' '( "," ( Expression ''exp'')?)' '( "," ( Expression ''exp'')?)*' '( Expression ''exp'' ( "," ( Expression ''exp'')?)*)' '( Expression ''exp'' ( "," ( Expression ''exp'')?)*)?' '( "," ( Expression ''exp'')?)+' 'NameValueList' '( NameValueList ''name_value_list'')' '( NameValueList ''name_value_list'')?' '( ExpressionList ''exp_list'')' '( ExpressionList ''exp_list'')?' '( "," IdentifierLiteral ''id'' ":" Expression ''exp'')' '( "," IdentifierLiteral ''id'' ":" Expression ''exp'')*' '( ",")' '( ",")?' '( "," Expression ''exp'')' '( "," Expression ''exp'')*' 'E O F' 'error' 'CreateStatement' 'UnionStatement')